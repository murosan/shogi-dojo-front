// format
// 駒台に乗ったとき、その種類の駒が何枚あるかによってpositionを決定する
// .cap-#{駒名}-#{持ち主(0|1)}-#{種類別の総数}-#{何番目か}
// .cap-fu-1-2-1

$pieceNameList: (
  hisha: 2,
  kaku: 2,
  kin: 4,
  gin: 4,
  kei: 4,
  kyou: 4,
  fu: 18
);

@mixin capPiece($name, $whose, $totalLength, $nth) {
  $side: left;
  $cap-width: 82%;

  @if $whose == 1 {
    $side: right;
  }

  @if $name == hisha or $name == kaku {
    #{$side}: hishaKaku($totalLength, $nth);
  } @else if $name == kin or $name == gin {
    #{$side}: kinGin($totalLength, $nth);
  } @else if $name == kei or $name == kyou {
    #{$side}: keiKyou($totalLength, $nth);
  } @else {
    #{$side}: fu($totalLength, $nth);
    $cap-width: 28%;
  }
  width: $cap-width;
}

@function hishaKaku($totalLength, $nth) {
  @if $totalLength == 1 {
    @return 10%;
  } @else {
    @return $nth * 20% - 20%;
  }
}

@function kinGin($totalLength, $nth) {
  @if $totalLength == 1 {
    @return 10%;
  } @else if $totalLength == 2 {
    @return $nth * 25% - 25%;
  } @else if $totalLength == 3 {
    @return $nth * 12% - 10%;
  } @else {
    @return $nth * 9% - 9%;
  }
}

@function keiKyou($totalLength, $nth) {
  @if $totalLength == 1 {
    @return 10%;
  } @else if $totalLength == 2 {
    @return $nth * 25% - 28%;
  } @else if $totalLength == 3 {
    @return $nth * 12% - 15%;
  } @else {
    @return $nth * 10% - 15%;
  }
}

@function fu($totalLength, $nth) {
  @if $totalLength == 1 {
    @return 37%;
  } @else if $totalLength == 2 {
    @return $nth * 30% - 10%;
  } @else if $totalLength == 3 {
    @return $nth * 25% - 14%;
  } @else if $totalLength == 4 {
    @return $nth * 20% - 14%;
  } @else if $totalLength == 5 {
    @return $nth * 15% - 8%;
  } @else if $totalLength == 6 {
    @return $nth * 13% - 8%;
  } @else if $totalLength == 7 {
    @return $nth * 11% - 8%;
  } @else if $totalLength <= 14 {
    @return $nth * 100% / ($totalLength + 3) - 7%;
  } @else {
    @return $nth * 100% / ($totalLength + 4) - 7%;
  }
}

@mixin topBottom($whose) {
  @if $whose == 0 {
    bottom: 0;
  } @else {
    top: 0;
  }
}

@each $name, $maxLength in $pieceNameList {
  @for $whose from 0 through 1 {
    @for $totalLength from 1 through $maxLength {
      @for $nth from 1 through $maxLength {
        .cap-#{$name}-#{$whose}-#{$totalLength}-#{$nth} {
          @include capPiece($name, $whose, $totalLength, $nth);
          @include topBottom($whose);
          z-index: $maxLength - $nth;
        }
      }
    }
  }
}
